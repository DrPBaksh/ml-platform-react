import React, { useState } from 'react';\nimport { HelpCircle, X, BookOpen, Lightbulb } from 'lucide-react';\n\nconst HelpTooltip = ({ title, content, level = 'beginner', children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const levelColors = {\n    beginner: 'bg-green-50 border-green-200 text-green-800',\n    intermediate: 'bg-blue-50 border-blue-200 text-blue-800',\n    advanced: 'bg-purple-50 border-purple-200 text-purple-800'\n  };\n\n  const levelIcons = {\n    beginner: BookOpen,\n    intermediate: Lightbulb,\n    advanced: HelpCircle\n  };\n\n  const LevelIcon = levelIcons[level];\n\n  return (\n    <div className=\"relative inline-block\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"inline-flex items-center justify-center w-5 h-5 rounded-full bg-gray-100 hover:bg-gray-200 text-gray-600 hover:text-gray-800 transition-colors duration-200\"\n        type=\"button\"\n      >\n        <HelpCircle className=\"w-3 h-3\" />\n      </button>\n\n      {isOpen && (\n        <>\n          {/* Backdrop */}\n          <div \n            className=\"fixed inset-0 z-40\" \n            onClick={() => setIsOpen(false)}\n          />\n          \n          {/* Tooltip */}\n          <div className=\"absolute z-50 w-80 p-4 bg-white rounded-lg shadow-xl border border-gray-200 transform -translate-x-1/2 left-1/2 mt-2\">\n            <div className=\"flex items-start justify-between mb-3\">\n              <div className=\"flex items-center space-x-2\">\n                <LevelIcon className=\"w-4 h-4 text-gray-600\" />\n                <h3 className=\"font-semibold text-gray-900\">{title}</h3>\n              </div>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n            \n            <div className={`inline-block px-2 py-1 rounded text-xs font-medium mb-3 ${levelColors[level]}`}>\n              {level.charAt(0).toUpperCase() + level.slice(1)} Level\n            </div>\n            \n            <div className=\"text-sm text-gray-700 leading-relaxed\">\n              {typeof content === 'string' ? (\n                <p>{content}</p>\n              ) : (\n                content\n              )}\n            </div>\n            \n            {children && (\n              <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                {children}\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default HelpTooltip;